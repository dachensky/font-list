name: Rust Multiplatform Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true

    - name: Build
      run: cargo build --release

    - name: Run tests
      run: cargo test

    - name: Package (Linux and macOS)
      if: matrix.os != 'windows-latest'
      run: tar czvf font-list-${{ github.ref_name }}-${{ matrix.os }}.tar.gz target/release/font-list

    - name: Prepare file for upload (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        $exePath = "target/release/font-list.exe"
        $newPath = "font-list-${{ github.ref_name }}-windows-latest.exe"
        Copy-Item $exePath $newPath

    - name: Create Release
      id: create_release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: ${{ github.ref_name }}
        body: Release of version ${{ github.ref_name }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Asset (Linux and macOS)
      if: matrix.os != 'windows-latest'
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./font-list-${{ github.ref_name }}-${{ matrix.os }}.tar.gz
        asset_name: font-list-${{ github.ref_name }}-${{ matrix.os }}.tar.gz
        asset_content_type: application/gzip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Asset (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./font-list-${{ github.ref_name }}-windows-latest.exe
        asset_name: font-list-${{ github.ref_name }}-windows-latest.exe
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
